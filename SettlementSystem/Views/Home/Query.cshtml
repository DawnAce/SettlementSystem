@{
    ViewData["Title"] = "Query Page";
}

<div id="app">
    <template>
        <el-upload class="upload-excel"
                   ref="upload"
                   :action="uploadPath"
                   :before-upload="beforeUpload"
                   :limit="1"
                   :auto-upload="false"
                   :on-success='handleSuccess'
                   list-type='text'
                   style="width:300px; margin-bottom:10px;">
            <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
            <el-button style="margin-left: 10px;" size="small" type="success" v-on:click="submitUpload">上传到服务器</el-button>
            <div slot="tip" class="el-upload__tip">只能上传Excel文件，且只能上传单个文件</div>
        </el-upload>
        <span>科室：</span>
        <el-cascader :options="hospitalOptions"
                     :props="hospitalProps"
                     placeholder="请选择医院"
                     expand-trigger="hover"
                     collapse-tags
                     v-model="hospitalDefault">
        </el-cascader>
        <span style="margin-left:10px">月份：</span>
        <el-cascader :options="dateOptions"
                     :props="dateProps"
                     placeholder="请选择日期"
                     collapse-tags
                     v-model="dateDefault">
        </el-cascader>
        <el-button type="primary" v-on:click="" style="float: right">查询</el-button>
        <el-table ref="filterTable"
                  :data="tableData"
                  border
                  v-on:filter-change="reformData"
                  style="width: 100%; margin-top:10px;">
            <el-table-column prop="fymc"
                             label="分院名称">
            </el-table-column>
            <el-table-column prop="zymc"
                             label="总院名称">
            </el-table-column>
            <el-table-column prop="zymc"
                             label="属于">
            </el-table-column>
            <el-table-column prop="ghr"
                             label="挂号人">
            </el-table-column>
            <el-table-column prop="jzrq"
                             label="日期">
            </el-table-column>
            <el-table-column prop="ks"
                             label="科室">
            </el-table-column>
            <el-table-column prop="ys"
                             label="医生">
            </el-table-column>
            <el-table-column prop="ghf"
                             label="挂号费">
            </el-table-column>
            <el-table-column prop="ddzt"
                             label="订单状态">
            </el-table-column>
            <el-table-column prop="zfzt"
                             label="支付状态">
            </el-table-column>
            <el-table-column prop="jsqd"
                             label="结算渠道">
            </el-table-column>
        </el-table>
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[50, 100]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="total">
        </el-pagination>
    </template>
</div>
<script>
    var selectDates = new Set();
    var selectTypes = new Set();

    var Main = {
        data() {
            return {
                uploadPath:"https://@Context.Request.Host" + "/api/MyApi/Upload",
                tableData: [],
                dateFilters: [],
                typeFilters: [],
                total: 0,
                currentPage: 1,
                pageSize: 50,
                dateProps: { multiple: true },
                dateOptions: [],
                dateDefault: [],
                hospitalProps: { multiple: true},
                hospitalOptions: [],
                hospitalDefault: []
            }
        },
        created() {
            this.initDateOptions()
            this.initHospitalOptions()
            //this.setTableData(this.tableData, this.total);
        },
        methods: {
            initDateOptions() {
                var year = new Date().getFullYear()
                var month = new Date().getMonth()
                if (month < 10) month = "0" + month

                var url = "https://@Context.Request.Host" + "/api/MyApi/GetDateChoices?year=" + year;

                var holder = this
                const req = new Request(url, { method: "GET" })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            data.data.forEach((item, index) => {
                                holder.dateOptions.push({"value": item.result, "label":item.result})
                            })
                           holder.dateDefault.push(year + "-" + month)
                        } else {
                            this.$message.erro(data.msg)
                        }
                    })
                });
            },
            initHospitalOptions() {
                var url = "https://@Context.Request.Host" + "/api/MyApi/GetHospitalTree"

                var holder = this
                const req = new Request(url, { method: "GET" })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            holder.hospitalOptions = data.data.children;
                            holder.hospitalDefault = data.data.default
                        } else {
                            this.$message.erro(data.msg)
                        }
                    })
                });
            },
            setTableData(tableData, totalCount) {
                var url = "https://@Context.Request.Host" + "/api/MyApi/GetPageData"

                const req = new Request(url, { method: "GET" })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            data.data.forEach((item, index) => {
                                typeFilters.push({"text": item.name, "value":item.id})
                            })
                        } else {
                            this.$message.erro(data.msg)
                        }
                    })
                });
            },
            submitUpload() {
                this.$refs.upload.submit();
            },
            beforeUpload(file, fileList) {
                const isXls = file.type === 'application/vnd.ms-excel'
                const isXlx = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
                if (isXls || isXlx) {
                    return
                }
                this.$message.error('只能上传Excel！')
                return false
            },
            handleSuccess(res, file, fileList) {
                if (res.code == "200") {
                    this.$message.success("上传成功")
                } else {
                    this.$message.error(res.msg)
                }
            },
            handleSizeChange(val) {
                this.tableData = currentData.slice(0, val);
                this.pageSize = val
            },
            handleCurrentChange(val) {
                var start = (val - 1) * 1
                var end = start + this.pageSize;
                this.tableData = currentData.slice(start, end)
            },
            reformData(filter) {
                var key = Object.getOwnPropertyNames(filter)[0]
                if (key == "jzrq")
                    selectDates = new Set(filter[key])
                else
                    selectTypes = new Set(filter[key])

                if (selectDates.size != 0 || selectTypes.size != 0) {
                    currentData = tableData.filter(item => selectDates.size == 0 || selectDates.has(item["jzrq"]))
                    currentData = currentData.filter(item => selectTypes.size == 0 || selectTypes.has(item["zymc"]))
                } else {
                    currentData = tableData
                }

                this.tableData = currentData.slice(0, this.pageSize)

                //change totalSize, totalPages, current page to 1
                this.changePagination(currentData.length, 1)
            },
            changePagination(total, currentPage, pageSize) {
                this.total = total;
                this.currentPage = currentPage ? currentPage : 1
                if (pageSize) this.pageSize = pageSize
            },
            getConditionSql() {

            }
        }
    }
    var Ctor = Vue.extend(Main)
    new Ctor().$mount('#app')
</script>
