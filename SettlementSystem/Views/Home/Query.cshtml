@{
    ViewData["Title"] = "Query Page";
}

<div id="app">
    <template>
        <span>科室：</span>
        <el-cascader ref="hospitalSelection"
                     :options="hospitalOptions"
                     :props="hospitalProps"
                     placeholder="请选择医院"
                     expand-trigger="hover"
                     collapse-tags
                     v-model="hospitalDefault">
        </el-cascader>
        <span style="margin-left:10px">月份：</span>
        <el-cascader ref="dateSelection"
                     :options="dateOptions"
                     :props="dateProps"
                     placeholder="请选择日期"
                     collapse-tags
                     v-model="dateDefault">
        </el-cascader>
        <el-button type="primary" v-on:click="query(1,true)" style="float: right">查询</el-button>
        <el-table ref="displayTable"
                  :data="tableData"
                  border
                  style="width: 100%; margin-top:10px;">
            <el-table-column prop="zymc"
                             label="总院名称">
            </el-table-column>
            <el-table-column prop="fymc"
                             label="分院名称">
            </el-table-column>
            <el-table-column prop="zymc"
                             label="属于">
            </el-table-column>
            <el-table-column prop="ghr"
                             label="挂号人">
            </el-table-column>
            <el-table-column prop="jzrq"
                             label="日期">
            </el-table-column>
            <el-table-column prop="ks"
                             label="科室">
            </el-table-column>
            <el-table-column prop="ys"
                             label="医生">
            </el-table-column>
            <el-table-column prop="ghf"
                             label="挂号费">
            </el-table-column>
            <el-table-column prop="ddzt"
                             label="订单状态">
            </el-table-column>
            <el-table-column prop="zfzt"
                             label="支付状态">
            </el-table-column>
            <el-table-column prop="jsqd"
                             label="结算渠道">
            </el-table-column>
        </el-table>
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[20, 50, 100]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="total">
        </el-pagination>
    </template>
</div>
<script>
    var selectDates = new Set();
    var selectTypes = new Set();

    var Main = {
        data() {
            return {
                uploadPath:"https://@Context.Request.Host" + "/api/MyApi/Upload",
                tableData: [],
                dateFilters: [],
                typeFilters: [],
                total: 0,
                currentPage: 1,
                pageSize: 20,
                dateProps: { multiple: true },
                dateOptions: [],
                dateDefault: [],
                hospitalProps: { multiple: true},
                hospitalOptions: [],
                hospitalDefault: [],
                needInitCount: 2
            }
        },
        created() {
            this.initDateOptions()
            this.initHospitalOptions()
        },
        watch: {
            needInitCount(val, oldVal) {
                 if (val == 0)
                    this.query(1, true)
            }
        },
        methods: {
            initDateOptions() {
                var year = new Date().getFullYear()
                var month = new Date().getMonth()
                if (month < 10) month = "0" + month

                var url = "https://@Context.Request.Host" + "/api/MyApi/GetDateChoices?year=" + year;

                var holder = this
                const req = new Request(url, { method: "GET" })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            data.data.forEach((item, index) => {
                                holder.dateOptions.push({"value": item.result.replace("-",""), "label":item.result})
                            })
                           holder.dateDefault.push(year + "" + month)
                        } else {
                            this.$message.erro(data.msg)
                        }
                        holder.$nextTick(function () {
                            --holder.needInitCount;
                        });
                    })
                });
            },
            initHospitalOptions() {
                var url = "https://@Context.Request.Host" + "/api/MyApi/GetHospitalTree?disableHospitals=false"

                var holder = this
                const req = new Request(url, { method: "GET" })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            var root = { "value": "0", "label": "全部" }
                            root["children"] = data.data.children
                            holder.hospitalOptions = [root]
                            data.data.default.forEach((item, index) => {
                                holder.hospitalDefault.push(['0', ...item])
                            })
                        } else {
                            this.$message.error(data.msg)
                        }
                        holder.$nextTick(function () {
                            --holder.needInitCount;
                        });
                    })
                });
            },
            query(pageIndex, needTotal) {
                var hospitalIds = []
                this.$refs.hospitalSelection.getCheckedNodes(true)
                    .forEach((node, index) => {
                        hospitalIds.push(node.data.value)
                    });

                var dateIds = []
                this.$refs.dateSelection.getCheckedNodes(true)
                    .forEach((node, index) => {
                        dateIds.push(node.data.value)
                    })
                //string ksIds,string date, int pageIndex, int pageSize, bool needTotalCount

                var url = "https://@Context.Request.Host" + "/api/MyApi/GetPageData"
                var holder = this
                const req = new Request(url, {
                    method: "POST",
                    headers: {
                      'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        "ksIds": hospitalIds,
                        "dates": dateIds,
                        "pageIndex": pageIndex,
                        "pageSize": this.pageSize,
                        "needTotalCount": needTotal
                    })
                })
                fetch(req).then(function (response) {
                    response.json().then(function (data) {
                        if (data.code == "200") {
                            holder.tableData = data.data.list
                            if (needTotal)
                                holder.total = data.data.totalCount
                        } else {
                            this.$message.error(data.msg)
                        }
                    })
                });
            },
            handleSizeChange(val) {
                this.pageSize = val
                this.query(this.currentPage, false)
            },
            handleCurrentChange(val) {
                if (this.currentPage == val) return
                this.currentPage = val
                this.query(this.currentPage, false)
            }
        }
    }
    var Ctor = Vue.extend(Main)
    new Ctor().$mount('#app')
</script>
